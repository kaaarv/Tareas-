$date
	Tue Aug 27 16:26:03 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top $end
$var wire 1 ! show_units $end
$var wire 7 " display_code [6:0] $end
$var reg 4 # gray_code [3:0] $end
$var reg 1 $ show_decades $end
$scope module uut $end
$var wire 4 % gray_code [3:0] $end
$var wire 1 $ show_decades $end
$var wire 4 & units_code [3:0] $end
$var wire 1 ' show_units $end
$var wire 4 ( selected_code [3:0] $end
$var wire 6 ) leds [5:0] $end
$var wire 7 * display_code [6:0] $end
$var wire 4 + decades_code [3:0] $end
$var wire 4 , binary_code [3:0] $end
$scope module u_gray_decoder $end
$var wire 4 - gray [3:0] $end
$var wire 4 . binary [3:0] $end
$upscope $end
$scope module u_gray_to_leds $end
$var wire 4 / binary [3:0] $end
$var wire 6 0 leds [5:0] $end
$upscope $end
$scope module u_module_comparator $end
$var wire 4 1 binary_code [3:0] $end
$var wire 1 ' comparation $end
$upscope $end
$scope module u_module_display $end
$var wire 4 2 binary_code [3:0] $end
$var wire 7 3 display_code [6:0] $end
$upscope $end
$scope module u_module_units $end
$var wire 4 4 binary_code [3:0] $end
$var wire 4 5 binary_units [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b110 5
b0 4
b1111110 3
b0 2
b0 1
b111111 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b1111110 *
b111111 )
b0 (
0'
b110 &
b0 %
0$
b0 #
b1111110 "
0!
$end
#20000
b110000 "
b110000 *
b110000 3
b1 (
b1 2
b111110 )
b111110 0
b111 &
b111 5
b1 ,
b1 .
b1 /
b1 1
b1 4
b1 #
b1 %
b1 -
#30000
b1101101 "
b1101101 *
b1101101 3
b10 (
b10 2
b111101 )
b111101 0
b1000 &
b1000 5
b10 ,
b10 .
b10 /
b10 1
b10 4
b11 #
b11 %
b11 -
#40000
b1111001 "
b1111001 *
b1111001 3
b11 (
b11 2
b111100 )
b111100 0
b1001 &
b1001 5
b11 ,
b11 .
b11 /
b11 1
b11 4
b10 #
b10 %
b10 -
#50000
b110011 "
b110011 *
b110011 3
b100 (
b100 2
b111011 )
b111011 0
b1010 &
b1010 5
b100 ,
b100 .
b100 /
b100 1
b100 4
b110 #
b110 %
b110 -
#60000
b1011011 "
b1011011 *
b1011011 3
b101 (
b101 2
b111010 )
b111010 0
b1011 &
b1011 5
b101 ,
b101 .
b101 /
b101 1
b101 4
b111 #
b111 %
b111 -
#70000
b1011111 "
b1011111 *
b1011111 3
b110 (
b110 2
b111001 )
b111001 0
b1100 &
b1100 5
b110 ,
b110 .
b110 /
b110 1
b110 4
b101 #
b101 %
b101 -
#80000
b1110000 "
b1110000 *
b1110000 3
b111 (
b111 2
b111000 )
b111000 0
b1101 &
b1101 5
b111 ,
b111 .
b111 /
b111 1
b111 4
b100 #
b100 %
b100 -
#90000
b1111111 "
b1111111 *
b1111111 3
b0 +
0!
0'
b1000 (
b1000 2
b110111 )
b110111 0
b1110 &
b1110 5
b1000 ,
b1000 .
b1000 /
b1000 1
b1000 4
b1100 #
b1100 %
b1100 -
#100000
b1110011 "
b1110011 *
b1110011 3
b1001 (
b1001 2
b110110 )
b110110 0
b1111 &
b1111 5
b1001 ,
b1001 .
b1001 /
b1001 1
b1001 4
b1101 #
b1101 %
b1101 -
#110000
b1111110 "
b1111110 *
b1111110 3
b1 +
1!
1'
b0 (
b0 2
b110101 )
b110101 0
b0 &
b0 5
b1010 ,
b1010 .
b1010 /
b1010 1
b1010 4
b1111 #
b1111 %
b1111 -
#120000
b110000 "
b110000 *
b110000 3
b1 (
b1 2
b110100 )
b110100 0
b1 &
b1 5
b1011 ,
b1011 .
b1011 /
b1011 1
b1011 4
b1110 #
b1110 %
b1110 -
#130000
b1101101 "
b1101101 *
b1101101 3
b10 (
b10 2
b110011 )
b110011 0
b10 &
b10 5
b1100 ,
b1100 .
b1100 /
b1100 1
b1100 4
b1010 #
b1010 %
b1010 -
#140000
b1111001 "
b1111001 *
b1111001 3
b11 (
b11 2
b110010 )
b110010 0
b11 &
b11 5
b1101 ,
b1101 .
b1101 /
b1101 1
b1101 4
b1011 #
b1011 %
b1011 -
#150000
b110011 "
b110011 *
b110011 3
b100 (
b100 2
b110001 )
b110001 0
b100 &
b100 5
b1110 ,
b1110 .
b1110 /
b1110 1
b1110 4
b1001 #
b1001 %
b1001 -
#160000
b1011011 "
b1011011 *
b1011011 3
b101 (
b101 2
b110000 )
b110000 0
b101 &
b101 5
b1111 ,
b1111 .
b1111 /
b1111 1
b1111 4
b1000 #
b1000 %
b1000 -
#170000
b110000 "
b110000 *
b110000 3
b1 (
b1 2
1$
#180000
b1111110 "
b1111110 *
b1111110 3
b0 (
b0 2
b0 +
0!
0'
b111111 )
b111111 0
b110 &
b110 5
b0 ,
b0 .
b0 /
b0 1
b0 4
b0 #
b0 %
b0 -
#190000
b111110 )
b111110 0
b111 &
b111 5
b1 ,
b1 .
b1 /
b1 1
b1 4
b1 #
b1 %
b1 -
#200000
b111101 )
b111101 0
b1000 &
b1000 5
b10 ,
b10 .
b10 /
b10 1
b10 4
b11 #
b11 %
b11 -
#210000
b111100 )
b111100 0
b1001 &
b1001 5
b11 ,
b11 .
b11 /
b11 1
b11 4
b10 #
b10 %
b10 -
#220000
b111011 )
b111011 0
b1010 &
b1010 5
b100 ,
b100 .
b100 /
b100 1
b100 4
b110 #
b110 %
b110 -
#230000
b111010 )
b111010 0
b1011 &
b1011 5
b101 ,
b101 .
b101 /
b101 1
b101 4
b111 #
b111 %
b111 -
#240000
b111001 )
b111001 0
b1100 &
b1100 5
b110 ,
b110 .
b110 /
b110 1
b110 4
b101 #
b101 %
b101 -
#250000
b111000 )
b111000 0
b1101 &
b1101 5
b111 ,
b111 .
b111 /
b111 1
b111 4
b100 #
b100 %
b100 -
#260000
b1111110 "
b1111110 *
b1111110 3
b0 (
b0 2
b0 +
0!
0'
b110111 )
b110111 0
b1110 &
b1110 5
b1000 ,
b1000 .
b1000 /
b1000 1
b1000 4
b1100 #
b1100 %
b1100 -
#270000
b110110 )
b110110 0
b1111 &
b1111 5
b1001 ,
b1001 .
b1001 /
b1001 1
b1001 4
b1101 #
b1101 %
b1101 -
#280000
b110000 "
b110000 *
b110000 3
b1 (
b1 2
b1 +
1!
1'
b110101 )
b110101 0
b0 &
b0 5
b1010 ,
b1010 .
b1010 /
b1010 1
b1010 4
b1111 #
b1111 %
b1111 -
#290000
b110100 )
b110100 0
b1 &
b1 5
b1011 ,
b1011 .
b1011 /
b1011 1
b1011 4
b1110 #
b1110 %
b1110 -
#300000
b110011 )
b110011 0
b10 &
b10 5
b1100 ,
b1100 .
b1100 /
b1100 1
b1100 4
b1010 #
b1010 %
b1010 -
#310000
b110010 )
b110010 0
b11 &
b11 5
b1101 ,
b1101 .
b1101 /
b1101 1
b1101 4
b1011 #
b1011 %
b1011 -
#320000
b110001 )
b110001 0
b100 &
b100 5
b1110 ,
b1110 .
b1110 /
b1110 1
b1110 4
b1001 #
b1001 %
b1001 -
#330000
b110000 )
b110000 0
b101 &
b101 5
b1111 ,
b1111 .
b1111 /
b1111 1
b1111 4
b1000 #
b1000 %
b1000 -
#340000
